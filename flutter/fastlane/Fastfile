# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

def build_versions()
  commits_since_last_tag = changelog_from_git_commits(
    quiet: true,
    # One line per commit, which allows us to easily count them.
    pretty: 'oneline',
    # We push to "master" only when merging a PR, so increment with each merge.
    merge_commit_filtering: 'only_include_merges',
  ).lines.count

  {
    # Add a fixed integer to CI build number, because we drifted away. Outside
    # of CI, usually on a developer's workstation, just use number of commits.
    # TODO(dotdoom): remove #to_s once plugin supports integers.
    build_number_override: (
      is_ci? ? Integer(ci_build_number) + 4000 : number_of_commits
    ).to_s,
    # If there are any commits since the last tag (ex.: "2.1"), add them as the
    # third version number, turning it into "2.1.42". Otherwise just keep "2.1".
    build_name_override: commits_since_last_tag > 0 ?
      '%s.%d' % [last_git_tag, commits_since_last_tag] :
      last_git_tag,
  }
end

def android_build(options={})
  flutter(
    action: 'bootstrap',
    android_licenses: {
      # License hashes. These are NOT secret!
      # Copy them from $ANDROID_SDK_ROOT/licenses directory for the license
      # agreements you accept.
      'android-sdk-license' => '24333f8a63b6825ea9c5514f83c2829b004d1fee',
    },
  )

  flutter({
    action: 'build',
  }.merge(options).merge(build_versions))
end

lane :build do
  sh('cd .. && flutter packages get')
  flutter(
    action: 'l10n',
    l10n_strings_file: 'lib/flutter/localization.dart',
    l10n_strings_locale: 'en',
    l10n_reformat_arb: true,
  )
  flutter(action: 'format')
  flutter(action: 'analyze')
end

platform :android do
  lane :build do
    android_build(debug: true)
  end

  lane :publish do
    android_build
    supply(
      track: 'internal',
      apk: lane_context[SharedValues::FLUTTER_OUTPUT_APK],
    )
  end
end

platform :ios do
  lane :build do
    flutter({
      action: 'build',
      debug: true,
      codesign: false,
    }.merge(build_versions))
  end

  lane :publish do
    # Set up OS X keychain and switch match to readonly model. This command has
    # no effect outside CI.
    setup_travis

    match(
      type: 'appstore',
      app_identifier: 'org.dasfoo.delern',
    )
    # Build the app to:
    # - add version
    # - switch to release mode
    flutter({
      action: 'build',
    }.merge(build_versions))
    gym(silent: true, suppress_xcode_output: true)
    # TODO(dotdoom): set also "changelog"
    pilot(
      ipa: 'build/Runner.ipa',
    )
  end
end

# vim: ft=ruby
